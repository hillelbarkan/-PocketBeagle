#include <stdio.h>
#include <sys/time.h>
#include <time.h>
#include "Reading_Analog.h"
#include "Gpio_set.h"
#include <term.h>
#include <unistd.h>
int Night_mode = 0;
  main() {

	 time_t t = time(NULL);
	 struct tm tm = *localtime(&t);
	 printf("now: %d-%d-%d %d:%d:%d\n",tm.tm_year + 1900,tm.tm_mon + 1,tm.tm_mday,tm.tm_hour,tm.tm_min,tm.tm_sec);
	 //  SET_Anlog_Raw_init(0,5);
	 while(1)
	 {
		 SET_Anlog_Raw_init(0, 1);	 
/****************************************************************
* Set ON The light in the garden works Night mode\n
****************************************************************/

		 if (1)  //tm.tm_hour>=18 tm.tm_hour <= 5 || tm.tm_hour >= 1 && tm.tm_hour <= 0 || tm.tm_hour >= 19
	{
		Night_mode = 1;
		printf("Night mode\n");
		time_t t = time(NULL);
		struct tm tm = *localtime(&t);
		printf("now: %d-%d-%d %d:%d:%d\n", tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);
	}


 	if (Night_mode) {
			
			
	    	SET_Anlog_Raw_init(0, 2);
			printf("Night mode\n");
			fflush(stdout);

	 	if (value_int < 2500)
			{
				gpio_set_value_1(20);
				int val = gpio_get_value(20);
				printf("%d\n", val); 
                printf("%d\n", value_int);
			}
		}
	/****************************************************************
	* Set OFF Day mode The light in the garden does not work
	****************************************************************/

		 if (1) //tm.tm_hour < 18  tm.tm_hour >=6 ||
	{
		Night_mode = 0;
		printf("Day mode\n");
		time_t t = time(NULL);
		struct tm tm = *localtime(&t);
		printf("now: %d-%d-%d %d:%d:%d\n", tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);
	}

	if (!Night_mode)
	{

		
		if (value_int > 4000)
		{
			gpio_set_value_0(20);
			int val=gpio_get_value(20);
			printf("%d\n",val); 
			printf("Day mode\n");
			printf("%d\n", value_int);
			 //int Night_mode = 0;
		}
	}
	 sleep(1);
	
	

//gpio_set_value_1(20);

}
}
